"""
Response Templates - детерминированные ответы

NO AI GENERATION = NO HALLUCINATION
"""

TEMPLATES = {
    # GREETING
    "greeting": "Здравствуйте! Я AI-ассистент SE Express. Мы в режиме тестирования, приносим извинения за возможные неточности. Чем могу помочь?",
    
    "need_city": "В каком городе вам нужны грузчики?",
    
    "need_details": "Сколько грузчиков и на сколько часов вам нужно?",
    
    "need_phone": "Оставьте телефон, менеджер свяжется для уточнения деталей.",
    
    "legal_no_price": "Для юридических лиц персональный расчет. Оставьте телефон, менеджер подготовит коммерческое предложение.",
    
    "legal_with_phone": "Заявка создана! Менеджер подготовит персональный расчет и свяжется в ближайшее время.",
    
    # PRIVATE CUSTOMER - WITH PRICE
    "private_with_price": "В {city} {ppr}₽/час (минимум {min_hours}ч).\n\n{people} грузчика × {hours}ч × {ppr}₽ = {total}₽\n\nОставьте телефон для оформления заявки.",
    
    "private_deal_created": "Заявка создана! Итого: {total}₽. Менеджер свяжется для подтверждения времени и адреса.",
    
    # SPECIAL CASES
    "tackling_need_phone": "Такелажные работы требуют персонального расчета. Оставьте телефон, менеджер рассчитает стоимость.",
    
    "tackling_deal_created": "Заявка создана! Менеджер рассчитает стоимость такелажных работ и свяжется.",
    
    "min_2_workers": "Извините, минимальный заказ - 2 грузчика. Один грузчик работу не выполнит.",
    
    "large_order_clarify": "Это большой заказ ({people} грузчиков). Это для компании/офиса или частный заказ?",
    
    "unknown_city": "К сожалению, в городе {city} мы пока не работаем. Работаем в городах России. Уточните город или оставьте телефон, менеджер проверит возможность выезда.",
    
    "city_not_russia": "К сожалению, работаем только в городах России.",
    
    # FORBIDDEN
    "forbidden_body_transport": "К сожалению, транспортировку умерших мы не оказываем. Обратитесь в ритуальную службу.",
    
    "forbidden_illegal": "К сожалению, такие услуги мы не оказываем.",
    
    # RESTRICTIONS
    "floor_restriction": "К сожалению, на {floor} этаж без лифта мы не поднимаемся. Работаем до 3 этажа без лифта или с лифтом на любой этаж.",
    
    "heavy_item_tackling": "Предмет весом {weight} кг требует такелажных работ и персонального расчета. Оставьте телефон, менеджер рассчитает стоимость.",
    
    # CLARIFICATIONS
    "need_more_info": "Уточните, пожалуйста: в каком городе, сколько грузчиков и на сколько часов?",
    
    # ERRORS
    "bitrix_unavailable": "К сожалению, система бронирования временно недоступна. Пожалуйста, напишите свой номер чуть позже.",
    
    "error_fallback": "Извините, произошла техническая ошибка. Оставьте телефон, менеджер свяжется.",
}


def format_template(template_id: str, **kwargs) -> str:
    """
    Заполнить template данными
    
    Args:
        template_id: ID шаблона из TEMPLATES
        **kwargs: Данные для подстановки
    
    Returns:
        str: Готовый ответ
    """
    if template_id not in TEMPLATES:
        return TEMPLATES['error_fallback']
    
    template = TEMPLATES[template_id]
    
    try:
        return template.format(**kwargs)
    except KeyError as e:
        # Если не хватает данных - вернуть как есть
        return template

